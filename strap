#!/bin/bash -e

trap 'catch_err $? $LINENO' ERR

catch_err() {
  if [ "$1" != "0" ]; then
    # error handling goes here
    echo "[STRAP FATEL ERROR] Caught error $1 on line $2"
  fi
}

source lib/libstep.sh
source lib/libstrap.sh

export PATH="/usr/bin:/bin/:/sbin:/usr/sbin"
export LANG="C"
export LC_ALL="C"
export STRAP_PATH=$PATH
export STRAP_LANG=$LANG
export STRAP_LC_ALL=$LC_ALL
export STRAP_CWD=$(pwd)
export STRAP_PATCHES=$STRAP_CWD/patches
export STRAP_SOURCES=$STRAP_CWD/sources
export STRAP_BUILD=$STRAP_CWD/build
export STRAP_INSTALL=$STRAP_CWD/install
export STRAP_TARGET_ARCH=${STRAP_TARGET_ARCH:-x86_64}
export STRAP_BUILD_JOBS=${STRAP_BUILD_JOBS:-$(nproc)}

umask 022

if [ "$1" == "" ]; then
  strap_msg_red "Please specify a stage to build."
  exit 1
fi

export STRAP_SEL_CMD=$1

case $STRAP_SEL_CMD in
  "stage0" | "stage1" | "stage2")

    if ! test -d "${STRAP_CWD}"/"${STRAP_SEL_CMD}"; then
      strap_msg_red "Can not execute $1, as the directory does not exist."
      exit 1
    fi

    STRAP_STAGE=$STRAP_SEL_CMD

    if test -z "${STRAP_TARGET_ARCH}"; then
      strap_msg_red "Please set STRAP_TARGET_ARCH to build ${STRAP_STAGE}"
      exit 1
    fi

    if ! test -f "${STRAP_CWD}"/target/"${STRAP_TARGET_ARCH}".tgt; then
      strap_msg_red "$1 target file does not exist."
      exit 1
    fi

    strap_msg "Found target file: ${STRAP_CWD}/target/${STRAP_TARGET_ARCH}.tgt"

    strap_msg "Selecting target file..."

    source ${STRAP_CWD}/target/${STRAP_TARGET_ARCH}.tgt

    strap_msg "Creating needed directories..."

    mkdir -vp "${STRAP_BUILD}" "${STRAP_INSTALL}" "${STRAP_SOURCES}"

    strap_msg "Starting execution of ${STRAP_SEL_CMD} with target of ${STRAP_TARGET_ARCH}"

    strap_msg "Build Threads: ${STRAP_BUILD_JOBS}"

    for step in $(cat "${STRAP_CWD}"/"${STRAP_STAGE}"/"${STRAP_STAGE}".order); do
      set -e

      if ! test -f "${STRAP_CWD}"/"${STRAP_STAGE}"/"${step}".step; then
        strap_msg_red "Step ${step} does not exist."
        exit 1
      fi

      strap_msg "Setting up ${step} step..."

      # Load the step file
      source "${STRAP_CWD}"/"${STRAP_STAGE}"/"${step}".step

      # Download and extract the sources
      for url in $source{1..99}; do
        strap_filedownload "$url" "$STRAP_SOURCES"/"$(basename "$url")" || exit 1
        strap_fileunpack "$STRAP_SOURCES"/"$(basename "$url")" "$STRAP_BUILD" || exit 1
      done

      # Run build function
      if test -n build; then
        strap_msg "Running build function for ${step} step..."

        unset CFLAGS
        unset CXXFLAGS
        unset LDFLAGS
        export CC="gcc"
        export CXX="g++"

        cd ${STRAP_BUILD} && build || exit 1
      else
        strap_msg_red "No build function found for ${step}."
        exit 1
      fi

      cd ${STRAP_CWD}

      # Cleanup build directory
      strap_msg "Cleaning build directory..."

      rm -rf "${STRAP_BUILD}"/*

      strap_msg "Finished ${step} step."
    done

    strap_msg "Execution of ${STRAP_SEL_CMD} with target of ${STRAP_TARGET_ARCH} finished."

    exit 0
    ;;
  "distclean" | "distcleanup")
    strap_msg "Cleaning up (dist)..."
    rm -rf "${STRAP_INSTALL}" "${STRAP_SOURCES}" "${STRAP_BUILD}"
    exit 0
    ;;
  "clean" | "cleanup")
    strap_msg "Cleaning up..."
    rm -rf "${STRAP_INSTALL}" "${STRAP_BUILD}"
    exit 0
    ;;
  *)
    strap_msg_red "Unknown command: $STRAP_SEL_CMD"
    strap_msg_red "Available commands: stage0, stage1, stage2, clean | cleanup"
    exit 1
    ;;
esac

exit 0
